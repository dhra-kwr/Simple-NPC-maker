package simplenpcs;

import java.util.ArrayList;
import java.util.Random;

public class SimpleNPCsUI extends javax.swing.JFrame {
    
    public SimpleNPCsUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        raceButtonGroup = new javax.swing.ButtonGroup();
        genderButtonGroup = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        racePanel = new javax.swing.JPanel();
        humanButton = new javax.swing.JRadioButton();
        elfButton = new javax.swing.JRadioButton();
        dwarfButton = new javax.swing.JRadioButton();
        dragonbornButton = new javax.swing.JRadioButton();
        savageButton = new javax.swing.JRadioButton();
        otherButton = new javax.swing.JRadioButton();
        genderPanel = new javax.swing.JPanel();
        maleButton = new javax.swing.JRadioButton();
        femaleButton = new javax.swing.JRadioButton();
        otherGenderButton = new javax.swing.JRadioButton();
        creationPanel = new javax.swing.JPanel();
        creationButton = new javax.swing.JButton();
        npcInfoPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        physicalLabel = new javax.swing.JLabel();
        physicalTextField = new javax.swing.JTextField();
        personalityLabel = new javax.swing.JLabel();
        personalityTextField = new javax.swing.JTextField();
        occupationLabel = new javax.swing.JLabel();
        occupationTextField = new javax.swing.JTextField();
        motivationLabel = new javax.swing.JLabel();
        motivationTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple NPCs");
        setName("mainFrame"); // NOI18N

        racePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Race Style Panel")));
        racePanel.setPreferredSize(new java.awt.Dimension(240, 80));
        racePanel.setRequestFocusEnabled(false);

        raceButtonGroup.add(humanButton);
        humanButton.setText("Human");

        raceButtonGroup.add(elfButton);
        elfButton.setText("Elf");

        raceButtonGroup.add(dwarfButton);
        dwarfButton.setText("Dwarf");

        raceButtonGroup.add(dragonbornButton);
        dragonbornButton.setText("Dragonborn");

        raceButtonGroup.add(savageButton);
        savageButton.setText("Savage");

        raceButtonGroup.add(otherButton);
        otherButton.setText("Other");
        otherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout racePanelLayout = new javax.swing.GroupLayout(racePanel);
        racePanel.setLayout(racePanelLayout);
        racePanelLayout.setHorizontalGroup(
            racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(racePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(humanButton)
                    .addComponent(dragonbornButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(savageButton)
                    .addComponent(elfButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(otherButton)
                    .addComponent(dwarfButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        racePanelLayout.setVerticalGroup(
            racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(racePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanButton)
                    .addComponent(elfButton)
                    .addComponent(dwarfButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dragonbornButton)
                    .addComponent(savageButton)
                    .addComponent(otherButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        genderPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Gender Panel"));
        genderPanel.setPreferredSize(new java.awt.Dimension(240, 60));
        genderPanel.setRequestFocusEnabled(false);

        genderButtonGroup.add(maleButton);
        maleButton.setText("Male");

        genderButtonGroup.add(femaleButton);
        femaleButton.setText("Female");

        genderButtonGroup.add(otherGenderButton);
        otherGenderButton.setText("Other");

        javax.swing.GroupLayout genderPanelLayout = new javax.swing.GroupLayout(genderPanel);
        genderPanel.setLayout(genderPanelLayout);
        genderPanelLayout.setHorizontalGroup(
            genderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(genderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(genderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maleButton)
                    .addComponent(femaleButton)
                    .addComponent(otherGenderButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        genderPanelLayout.setVerticalGroup(
            genderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(genderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(maleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(femaleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, Short.MAX_VALUE)
                .addComponent(otherGenderButton))
        );

        creationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Creation Panel"));
        creationPanel.setPreferredSize(new java.awt.Dimension(240, 60));

        creationButton.setText("Create NPC");
        creationButton.setMaximumSize(new java.awt.Dimension(95, 23));
        creationButton.setMinimumSize(new java.awt.Dimension(95, 23));
        creationButton.setPreferredSize(new java.awt.Dimension(91, 23));
        creationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout creationPanelLayout = new javax.swing.GroupLayout(creationPanel);
        creationPanel.setLayout(creationPanelLayout);
        creationPanelLayout.setHorizontalGroup(
            creationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(creationButton, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        creationPanelLayout.setVerticalGroup(
            creationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creationPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(creationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        npcInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "NPC Information"));

        nameLabel.setText("Name");

        physicalLabel.setText("Physical Trait");

        personalityLabel.setText("Personality Trait");

        occupationLabel.setText("Occupation");

        motivationLabel.setText("Motivation");

        javax.swing.GroupLayout npcInfoPanelLayout = new javax.swing.GroupLayout(npcInfoPanel);
        npcInfoPanel.setLayout(npcInfoPanelLayout);
        npcInfoPanelLayout.setHorizontalGroup(
            npcInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(npcInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(npcInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameTextField)
                    .addComponent(physicalTextField)
                    .addComponent(physicalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(personalityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(personalityTextField)
                    .addComponent(occupationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(occupationTextField)
                    .addComponent(motivationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(motivationTextField))
                .addContainerGap())
        );
        npcInfoPanelLayout.setVerticalGroup(
            npcInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(npcInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(physicalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(physicalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(personalityLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(personalityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(occupationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(occupationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(motivationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(motivationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(npcInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(racePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(genderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(creationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(racePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(genderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(creationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(npcInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void otherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherButtonActionPerformed

    private void creationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creationButtonActionPerformed
        // TODO add your handling code here:
        nameTextField.setText(nameMaker());
        physicalTextField.setText(physicalMaker());
        personalityTextField.setText(personalityMaker());
        occupationTextField.setText(occupationMaker());
        motivationTextField.setText(motivationMaker());
    }//GEN-LAST:event_creationButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimpleNPCsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimpleNPCsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimpleNPCsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimpleNPCsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimpleNPCsUI().setVisible(true);
            }
        });
    }
    
    public String nameMaker() {
        
        Random rand = new Random();
        
        NameLists nameList = new NameLists();
        nameList.createNameLists();
        
        if (humanButton.isSelected()) {
            if (maleButton.isSelected()) {
                String name = nameList.humanMaleList.get(
                        rand.nextInt(nameList.humanMaleList.size()));
                return name;
            } else if (femaleButton.isSelected()) {
                String name = nameList.humanFemaleList.get(
                        rand.nextInt(nameList.humanFemaleList.size()));
                return name;
            } else {
                String name = nameList.otherList.get(
                        rand.nextInt(nameList.otherList.size()));
                return name;
            }
            
        } else if (elfButton.isSelected()) {
            if (maleButton.isSelected()) {
                String name = nameList.elfMaleList.get(
                        rand.nextInt(nameList.elfMaleList.size()));
                return name;
            } else if (femaleButton.isSelected()) {
                String name = nameList.elfFemaleList.get(
                        rand.nextInt(nameList.elfFemaleList.size()));
                return name;
            } else {
                String name = nameList.otherList.get(
                        rand.nextInt(nameList.otherList.size()));
                return name;
            }
        } else if (dwarfButton.isSelected()) {
            if (maleButton.isSelected()) {
                String name = nameList.dwarfMaleList.get(
                        rand.nextInt(nameList.dwarfMaleList.size()));
                return name;
            } else if (femaleButton.isSelected()) {
                String name = nameList.dwarfFemaleList.get(
                        rand.nextInt(nameList.dwarfFemaleList.size()));
                return name;
            } else {
                String name = nameList.otherList.get(
                        rand.nextInt(nameList.otherList.size()));
                return name;
            }
        } else if (dragonbornButton.isSelected()) {
            String name = nameList.dragonbornList.get(
                    rand.nextInt(nameList.dragonbornList.size()));
                return name;
        } else if (savageButton.isSelected()) {
            String name = nameList.savageList.get(
                    rand.nextInt(nameList.savageList.size()));
                return name;
        } else if (otherButton.isSelected()) {
            String name = nameList.otherList.get(
                    rand.nextInt(nameList.otherList.size()));
                return name;
        } else {
            String name = nameList.otherList.get(
                    rand.nextInt(nameList.otherList.size()));
                return name;
        }
    }
    
    public String physicalMaker() {
        
        Random rand = new Random();
        OtherLists physicalTrait = new OtherLists();
        
        physicalTrait.createOtherLists();
        String physical = physicalTrait.physicalTraitList.get(
            rand.nextInt(physicalTrait.physicalTraitList.size()));
        
        return physical;
    }
    
    public String personalityMaker() {
        
        Random rand = new Random();
        OtherLists personalityTrait = new OtherLists();
        
        personalityTrait.createOtherLists();
        String personality = personalityTrait.personalityTraitList.get(
            rand.nextInt(personalityTrait.personalityTraitList.size()));
        
        return personality;
    }
    
    public String occupationMaker() {
        
        Random rand = new Random();
        OtherLists occupationTrait = new OtherLists();
        
        occupationTrait.createOtherLists();
        String occupation = occupationTrait.occupationList.get(
            rand.nextInt(occupationTrait.occupationList.size()));
        
        return occupation;
    }
    
    public String motivationMaker() {
        
        Random rand = new Random();
        OtherLists motivationTrait = new OtherLists();
        
        motivationTrait.createOtherLists();
        String motivation = motivationTrait.motivationList.get(
            rand.nextInt(motivationTrait.motivationList.size()));
        
        return motivation;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton creationButton;
    private javax.swing.JPanel creationPanel;
    private javax.swing.JRadioButton dragonbornButton;
    private javax.swing.JRadioButton dwarfButton;
    private javax.swing.JRadioButton elfButton;
    private javax.swing.JRadioButton femaleButton;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JPanel genderPanel;
    private javax.swing.JRadioButton humanButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton maleButton;
    private javax.swing.JLabel motivationLabel;
    private javax.swing.JTextField motivationTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPanel npcInfoPanel;
    private javax.swing.JLabel occupationLabel;
    private javax.swing.JTextField occupationTextField;
    private javax.swing.JRadioButton otherButton;
    private javax.swing.JRadioButton otherGenderButton;
    private javax.swing.JLabel personalityLabel;
    private javax.swing.JTextField personalityTextField;
    private javax.swing.JLabel physicalLabel;
    private javax.swing.JTextField physicalTextField;
    private javax.swing.ButtonGroup raceButtonGroup;
    private javax.swing.JPanel racePanel;
    private javax.swing.JRadioButton savageButton;
    // End of variables declaration//GEN-END:variables
}
