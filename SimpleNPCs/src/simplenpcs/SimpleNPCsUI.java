package simplenpcs;

import java.util.ArrayList;
import java.util.Random;

public class SimpleNPCsUI extends javax.swing.JFrame {
    
    public SimpleNPCsUI() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    NameLists names = new NameLists();
    OtherLists traits = new OtherLists();
    Random rand = new Random();
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        raceButtonGroup = new javax.swing.ButtonGroup();
        genderButtonGroup = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        racePanel = new javax.swing.JPanel();
        humanButton = new javax.swing.JRadioButton();
        elfButton = new javax.swing.JRadioButton();
        dwarfButton = new javax.swing.JRadioButton();
        dragonbornButton = new javax.swing.JRadioButton();
        savageButton = new javax.swing.JRadioButton();
        otherButton = new javax.swing.JRadioButton();
        genderPanel = new javax.swing.JPanel();
        maleButton = new javax.swing.JRadioButton();
        femaleButton = new javax.swing.JRadioButton();
        otherGenderButton = new javax.swing.JRadioButton();
        creationPanel = new javax.swing.JPanel();
        creationButton = new javax.swing.JButton();
        npcInfoPanel = new javax.swing.JPanel();
        npcInfoScrollPane = new javax.swing.JScrollPane();
        npcInfoTextArea = new javax.swing.JTextArea();
        printPanel = new javax.swing.JPanel();
        printNPCButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple NPCs");
        setName("mainFrame"); // NOI18N

        racePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Race Style Panel")));
        racePanel.setPreferredSize(new java.awt.Dimension(240, 80));
        racePanel.setRequestFocusEnabled(false);

        raceButtonGroup.add(humanButton);
        humanButton.setText("Human");

        raceButtonGroup.add(elfButton);
        elfButton.setText("Elf");

        raceButtonGroup.add(dwarfButton);
        dwarfButton.setText("Dwarf");

        raceButtonGroup.add(dragonbornButton);
        dragonbornButton.setText("Dragonborn");

        raceButtonGroup.add(savageButton);
        savageButton.setText("Savage");

        raceButtonGroup.add(otherButton);
        otherButton.setText("Other");
        otherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout racePanelLayout = new javax.swing.GroupLayout(racePanel);
        racePanel.setLayout(racePanelLayout);
        racePanelLayout.setHorizontalGroup(
            racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(racePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(humanButton)
                    .addComponent(dragonbornButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(savageButton)
                    .addComponent(elfButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(otherButton)
                    .addComponent(dwarfButton))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        racePanelLayout.setVerticalGroup(
            racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(racePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanButton)
                    .addComponent(elfButton)
                    .addComponent(dwarfButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(racePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dragonbornButton)
                    .addComponent(savageButton)
                    .addComponent(otherButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        genderPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Gender Panel"));
        genderPanel.setPreferredSize(new java.awt.Dimension(240, 60));
        genderPanel.setRequestFocusEnabled(false);

        genderButtonGroup.add(maleButton);
        maleButton.setText("Male");

        genderButtonGroup.add(femaleButton);
        femaleButton.setText("Female");

        genderButtonGroup.add(otherGenderButton);
        otherGenderButton.setText("Other");

        javax.swing.GroupLayout genderPanelLayout = new javax.swing.GroupLayout(genderPanel);
        genderPanel.setLayout(genderPanelLayout);
        genderPanelLayout.setHorizontalGroup(
            genderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(genderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(genderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maleButton)
                    .addComponent(femaleButton)
                    .addComponent(otherGenderButton))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        genderPanelLayout.setVerticalGroup(
            genderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(genderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(maleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(femaleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, Short.MAX_VALUE)
                .addComponent(otherGenderButton))
        );

        creationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Creation Panel"));
        creationPanel.setPreferredSize(new java.awt.Dimension(240, 60));

        creationButton.setText("Create NPC");
        creationButton.setMaximumSize(new java.awt.Dimension(95, 23));
        creationButton.setMinimumSize(new java.awt.Dimension(95, 23));
        creationButton.setPreferredSize(new java.awt.Dimension(91, 23));
        creationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout creationPanelLayout = new javax.swing.GroupLayout(creationPanel);
        creationPanel.setLayout(creationPanelLayout);
        creationPanelLayout.setHorizontalGroup(
            creationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(creationButton, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        creationPanelLayout.setVerticalGroup(
            creationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creationPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(creationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        npcInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "NPC Information"));

        npcInfoTextArea.setColumns(20);
        npcInfoTextArea.setRows(5);
        npcInfoScrollPane.setViewportView(npcInfoTextArea);

        javax.swing.GroupLayout npcInfoPanelLayout = new javax.swing.GroupLayout(npcInfoPanel);
        npcInfoPanel.setLayout(npcInfoPanelLayout);
        npcInfoPanelLayout.setHorizontalGroup(
            npcInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(npcInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(npcInfoScrollPane)
                .addContainerGap())
        );
        npcInfoPanelLayout.setVerticalGroup(
            npcInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(npcInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(npcInfoScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );

        printNPCButton.setText("PRINT!");
        printNPCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printNPCButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout printPanelLayout = new javax.swing.GroupLayout(printPanel);
        printPanel.setLayout(printPanelLayout);
        printPanelLayout.setHorizontalGroup(
            printPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, printPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(printNPCButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        printPanelLayout.setVerticalGroup(
            printPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(printPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(printNPCButton, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(npcInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(racePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(genderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(creationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(printPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(racePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(genderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(creationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(npcInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void otherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherButtonActionPerformed
    
    private void creationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creationButtonActionPerformed
        // TODO add your handling code here:
        npcInfoTextArea.setText("Name: " + npcName() + "\n");
        npcTraits();
        
    }//GEN-LAST:event_creationButtonActionPerformed

    private void printNPCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printNPCButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_printNPCButtonActionPerformed

            
    public void npcTraits() {
        
        traits.createOtherLists();
    
        String physicalTrait = traits.physicalTraitList.get(rand.nextInt(
                traits.personalityTraitList.size()));
        String personalityTrait = traits.personalityTraitList.get(rand.nextInt(
                traits.personalityTraitList.size()));
        String occupation = traits.occupationList.get(rand.nextInt(
                traits.occupationList.size()));
        String motivation = traits.motivationList.get(rand.nextInt(
                traits.motivationList.size()));
        String secret = traits.secretList.get(rand.nextInt(
                traits.secretList.size()));
        
        npcInfoTextArea.append("Physical trait: " + physicalTrait + "\n" + 
                "Personality trait: " + personalityTrait + "\n" + "Occupation: " + 
                occupation + "\n" + "Motivation: " + motivation + "\n" + 
                "Secret: " + secret);
    }
    
    public String npcName() {
        
        names.createNameLists();
        
        if (humanButton.isSelected()) {
            if (maleButton.isSelected()) {
                return names.humanMaleList.get(rand.nextInt(names.humanMaleList.size()));
            } else if (femaleButton.isSelected()) {
                return names.humanFemaleList.get(rand.nextInt(names.humanFemaleList.size()));
            } else {
                return names.otherList.get(rand.nextInt(names.otherList.size()));
            }
        } else if (elfButton.isSelected()) {
            if (maleButton.isSelected()) {
                return names.elfMaleList.get(rand.nextInt(names.elfMaleList.size()));
            } else if (femaleButton.isSelected()) {
                return names.elfFemaleList.get(rand.nextInt(names.elfFemaleList.size()));
            } else {
                return names.otherList.get(rand.nextInt(names.otherList.size()));
            }
        } else if (dwarfButton.isSelected()) {
            if (maleButton.isSelected()) {
                return names.dwarfMaleList.get(rand.nextInt(names.dwarfMaleList.size()));
            } else if (femaleButton.isSelected()) {
                return names.dwarfFemaleList.get(rand.nextInt(names.dwarfFemaleList.size()));
            } else {
                return names.otherList.get(rand.nextInt(names.otherList.size()));
            }
        } else if (dragonbornButton.isSelected()) {
            if (maleButton.isSelected() || femaleButton.isSelected()) {
                return names.dragonbornList.get(rand.nextInt(names.dragonbornList.size()));
            } else {
                return names.otherList.get(rand.nextInt(names.otherList.size()));
            }
        } else if (savageButton.isSelected()) {
            return names.savageList.get(rand.nextInt(names.savageList.size()));
        } else {
            return names.otherList.get(rand.nextInt(names.otherList.size()));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimpleNPCsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimpleNPCsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimpleNPCsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimpleNPCsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimpleNPCsUI().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton creationButton;
    private javax.swing.JPanel creationPanel;
    private javax.swing.JRadioButton dragonbornButton;
    private javax.swing.JRadioButton dwarfButton;
    private javax.swing.JRadioButton elfButton;
    private javax.swing.JRadioButton femaleButton;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JPanel genderPanel;
    private javax.swing.JRadioButton humanButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton maleButton;
    private javax.swing.JPanel npcInfoPanel;
    private javax.swing.JScrollPane npcInfoScrollPane;
    private javax.swing.JTextArea npcInfoTextArea;
    private javax.swing.JRadioButton otherButton;
    private javax.swing.JRadioButton otherGenderButton;
    private javax.swing.JButton printNPCButton;
    private javax.swing.JPanel printPanel;
    private javax.swing.ButtonGroup raceButtonGroup;
    private javax.swing.JPanel racePanel;
    private javax.swing.JRadioButton savageButton;
    // End of variables declaration//GEN-END:variables
}
